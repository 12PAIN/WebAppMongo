<!DOCTYPE html>

<head>
    <title>Список статей</title>
    <link href="style.css" rel="stylesheet"/>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.3/umd/popper.min.js" integrity="sha384-vFJXuSJphROIrBnz7yo7oB41mKfc8JzQZiCq4NCceLEaO4IHwicKwpJf9c9IpFgh" crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.min.js" integrity="sha384-alpBpkh1PFOepccYVYDB4do5UnbKysX5WZXm3XxPqe5iKTfUKjNkCk9SaVuEZflJ" crossorigin="anonymous"></script>

</head>
<body>
    <h2>Статьи:</h2>
    
    <div style="display: flex;">
        <input id="findByName" name="findByName" type="text" value="{{findByNameValue}}"/>
        <button onclick="onFindByName();">Поиск по названию</button>
    </div>
    
    <div style="display: flex;">
        <select id="findByAuthor" name="findByAuthor">
            
            {{#each authors as |author|}}
                
                <option value="{{author}}"{{selected author ../findByAuthorValue}}>{{author}}</option>
                
            {{/each}}
        </select>
        <button onclick="onFindByAuthor();">Поиск по автору</button>
    </div>
    
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#createArticleModal">
        Создать статью
    </button>


    <div class="modal fade" id="createArticleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title" id="exampleModalLabel">Создать статью</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="modal-body">

            <div style="display: flex; flex-direction:column;">
                <input style="max-width: 600px; margin: 0.3rem;" placeholder="Название" type="text" id="newArticleName">
                <input style="max-width: 600px; margin: 0.3rem;"  placeholder="Авторы (через запятую и пробел)" type="text" id="newArticleAuthors">

                <textarea style="max-width: 600px; margin: 0.3rem; max-height:250px; overflow-y: scroll; height: 250px;"  
                    placeholder="Текст статьи" type="text" id="newArticleText"></textarea>

                <input style="max-width: 600px; margin: 0.3rem;"  placeholder="Теги(через запятую и пробел)" type="text" id="newArticleTags">
            </div>
            
        </div>
        <div class="modal-footer bg-light">
            <button id="createNewArticle" type="button" class="btn" data-dismiss="modal">Сохранить</button>
            <button type="button" class="btn  btn-outline-secondary" data-dismiss="modal">Закрыть</button>
        </div>
        </div>
    </div>
    </div>
    
    <br>
    <br>
    
    <table>
        <tr>
            <th>№</th>
            <th>Название</th>
            <th>Авторы</th>
            <th>Дата размещения</th>
            <th>Открыть</th>
            <th>Удалить</th>
        </tr>

        {{#each articles as |article|}}
            <tr>
                <td>{{sum @index 1}}</td>
                <td>{{article.name}}</td>
                <td> 
                    {{#each article.authors as |author|}}
                        {{author}}{{#notEq (sum @index 1) ../authors.length}}, {{/notEq}}
                    {{/each}}
                </td>
                <td>{{dateFormat article.datePublished "DD.MM.YYYY"}}</td>
                <td>
                    <a href="/articles/{{article._id}}">
                        <button>Открыть</button>
                    </a>
                </td>
                <td>
                    <button name="toDeleteButton" toDeleteId="{{article._id}}">Удалить</button>
                </td>
            </tr>
        {{/each}}

    </table>

    <script>
        function onFindByName(){
            var inputValue = document.getElementById('findByName').value;

            window.location.href = '/articles?findByName=' + encodeURI(inputValue); //one level up
        }

        function onFindByAuthor(){
            var inputValue = document.getElementById('findByAuthor').value;

            window.location.href = '/articles?findByAuthor=' + encodeURI(inputValue); //one level up
        }

        async function deleteOne(e){

            let caller=e.target || e.srcElement;

            let toDeleteId = caller.getAttribute('toDeleteId')
            
            await fetch("/articles/"+toDeleteId, {
                method: "DELETE"
            })

            location.reload()
        }

        let deleteButtons = document.getElementsByName("toDeleteButton").forEach((btn)=>{
            btn.addEventListener("click", deleteOne)});

        jQuery(document).ready(function(){
            
            $("#createNewArticle").on("click", async function(event){

                let articleName = $("#newArticleName").val();

                if(articleName == "") return;

                let articleAuthorsVal = $("#newArticleAuthors").val();

                if(articleAuthorsVal == "") return;

                let articleText = $("#newArticleText").val();

                if(articleText == "") return;

                let articleTagsVal = $("#newArticleTags").val();

                if (articleTagsVal == "") return;
                
                let articleAuthors = articleAuthorsVal.split(", ");
                let articleTags = articleTagsVal.split(", ");

                let newArticle = {
                    name: articleName,
                    tags: articleTags,
                    authors: articleAuthors,
                    text: articleText
                }

                let response = await fetch("/articles", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(newArticle)
                });

                location.reload();

            });
        });

    </script>
    
</body>